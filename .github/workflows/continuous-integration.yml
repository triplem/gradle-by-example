name: CI Build

on: [push]

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          java-package: jdk

      - name: Setup Gradle and Compile
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean classes testClasses testIntegrationClasses

  tests:
    name: Tests
    needs: compile
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          java-package: jdk
      - name: Run tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean check sonar aggregateReports
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload documentation results
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: build/documentation

  security:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          java-package: jdk
      - name: Check OWASP
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean dependencyCheckAnalyze
      - name: Upload owasp-report results
        uses: actions/upload-artifact@v2
        with:
          name: owasp-reports
          path: build/reports/owasp
      - name: Build package
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean assemble dockerCreateDockerfile -x test -x integrationTest
      - name: Build Image
        uses: docker/build-push-action@v2
        with:
          context: ./modules/app/build/docker/
          file: ./modules/app/build/docker/Dockerfile
          push: false
          tags: ghcr.io/triplem/gradle-by-example:latest
      - name: Scan container using trivy
        id: scan
        uses: azure/container-scan@v0
        with:
          image-name: ghcr.io/triplem/gradle-by-example:latest

  release:
    name: Release
    needs: [tests, security]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          java-package: jdk
      - name: Build package
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assemble -x test -x integrationTest
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Add plugin for conventional commits
        run: npm install conventional-changelog-conventionalcommits @semantic-release/exec
        working-directory: ./.github/workflows
      - name: Release to GitHub
        working-directory: ./.github/workflows
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      revnumber: ${{ env.revnumber }}

  build-publish-docker:
    name: Build and Publish Docker Image
    needs: release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          java-package: jdk
      - name: Build package
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean assemble dockerCreateDockerfile -x test -x integrationTest
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./modules/app/build/docker/
          file: ./modules/app/build/docker/Dockerfile
          push: true
          tags: |
            ghcr.io/triplem/gradle-by-example:latest
            ghcr.io/triplem/gradle-by-example:${{ needs.release.outputs.revnumber }}

  publish-docs:
    name: Publish Docs
    needs: release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          java-package: jdk
      - name: Download documentation reports
        uses: actions/download-artifact@v2
        with:
          name: documentation
          path: build/documentation
      - name: Download owasp reports
        uses: actions/download-artifact@v2
        with:
          name: owasp-reports
          path: build/reports/owasp
      - name: Build package
        uses: gradle/gradle-build-action@v2
        with:
          arguments: aggregateDocumentation
        env:
          revnumber: ${{ needs.release.outputs.revnumber }}
      - name: Publish documentation
        uses: JamesIves/github-pages-deploy-action@v4.2.3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: build/documentation
          CLEAN: true
