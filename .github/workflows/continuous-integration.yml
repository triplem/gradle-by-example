name: CI Build

on: 
  push:
  pull_request:
    branches: [ main ]

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.configureondemand=true

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3
        
      - name: Setup Gradle and Compile
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: clean classes testClasses integrationTestClasses
          cache-read-only: false

  validate:
    name: Validate Setup
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Validate Version Catalog
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: dependencies --configuration compileClasspath
          cache-read-only: false
    
  tests:
    name: Tests
    needs: [compile, validate]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Run tests
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: clean check sonarqube aggregateReports
          cache-read-only: false
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload documentation results
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: build/documentation

  security:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build package
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: clean assemble dockerCreateDockerfile -x test -x integrationTest
      - name: Build Image
        uses: docker/build-push-action@v5
        with:
          context: ./modules/app/build/docker/
          file: ./modules/app/build/docker/Dockerfile
          push: false
          tags: ghcr.io/triplem/gradle-by-example:latest
      - name: Scan container using trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/triplem/gradle-by-example:latest
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: trivy-results.sarif

  release:
    name: Release
    needs: [tests, security]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build package
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: assemble -x test -x integrationTest
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Add plugin for conventional commits
        run: npm install conventional-changelog-conventionalcommits @semantic-release/exec
        working-directory: ./.github/workflows
      - name: Release to GitHub
        working-directory: ./.github/workflows
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      revnumber: ${{ env.revnumber }}

  build-publish-docker:
    name: Build and Publish Docker Image
    needs: release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build package
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: clean assemble dockerCreateDockerfile -x test -x integrationTest
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./modules/app/build/docker/
          file: ./modules/app/build/docker/Dockerfile
          push: true
          tags: |
            ghcr.io/triplem/gradle-by-example:latest
            ghcr.io/triplem/gradle-by-example:${{ needs.release.outputs.revnumber }}

  publish-docs:
    name: Publish Docs
    needs: release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Download documentation reports
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: build/documentation
      - name: Build package
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: aggregateDocumentation
        env:
          revnumber: ${{ needs.release.outputs.revnumber }}
      - name: Publish documentation
        uses: JamesIves/github-pages-deploy-action@v4.6.9
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: build/documentation
          clean: true
